{"version":3,"sources":["components/Header/Header.jsx","components/Header/index.js","components/Textarea/index.js","components/Textarea/Textarea.jsx","components/BtnSelectAll/BtnSelectAll.jsx","components/BtnSelectAll/index.js","components/Title/index.js","components/Title/Title.jsx","components/BtnDelete/index.js","components/BtnDelete/BtnDelete.jsx","components/ItemTaskList/index.js","components/ItemTaskList/ItemTaskList.jsx","components/ListFooter/index.js","components/ListFooter/ListFooter.jsx","components/TaskList/index.js","components/TaskList/TaskList.jsx","components/Main/index.js","components/Main/Main.jsx","components/App/App.jsx","components/App/index.js","index.js"],"names":["Header","react_default","a","createElement","className","Textarea","handleKeyPress","e","getText","_this","props","text","target","value","keyCode","preventDefault","test","wrap","placeholder","onKeyDown","this","Component","BtnSelectAll","data","isAllChecked","selectedItem","classActive","concat","onClick","String","fromCharCode","Title","handleClick","_this$props","editItem","todolist","onDoubleClick","title","BtnDelete","handleClickBtn","onClickDelete","id","ItemTaskList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEditItem","setState","idEdit","valueBeforeEdit","handleClickCheckbox","checkedItem","_this$props2","trim","completed","handleInputBlur","_this$props3","handleInputChange","state","_this$state","_this$props4","deleteItem","isEdit","Fragment","type","autoFocus","onChange","onBlur","checked","htmlFor","components_Title","components_BtnDelete","ListFooter","tab","handleClickTab","getTab","innerHTML","deleteCompletedAll","countActiveItem","isCheckedExists","borderAll","borderActive","borderCompleted","TaskList","handleGetItemsTab","todoList","getItemsTab","filter","itemList","listItem","map","item","key","components_ItemTaskList","components_ListFooter","Main","getTextFromTextarea","counterTask","task","isOpen","saveToStorage","localStorage","setItem","JSON","stringify","length","removeItem","handleItemDelete","ItemID","_this$state2","i","splice","newIsOpen","handleDeleteCompleted","_this$state3","handleCheckedItem","handleSelectedItem","todolistEdit","isEmpty","getItem","parse","_this$state4","countCompletedItems","Tasks","components_TaskList","components_BtnSelectAll","components_Textarea","App","components_Header","components_Main","ReactDOM","render","components_App","document","getElementById"],"mappings":"2XASeA,ICPAA,EDCf,WACE,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,6CEHWC,oNCGbC,eAAiB,SAACC,GAAM,IACdC,EAAYC,EAAKC,MAAjBF,QAEFG,EAAOJ,EAAEK,OAAOC,MADC,KAEnBN,EAAEO,UACJP,EAAEQ,iBACW,KAATJ,GAAe,KAAKK,KAAKL,KAC3BJ,EAAEK,OAAOC,MAAQ,GACjBL,EAAQG,8EAMZ,OACEV,EAAAC,EAAAC,cAAA,YACEc,KAAK,MACLb,UAAU,mBACVc,YAAY,yBACZC,UAAWC,KAAKd,wBApBDe,oBCSRC,ICXAA,EDCf,SAAsBC,GAAM,IAClBC,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aAChBC,EAAcF,EAAe,SAAW,GAC9C,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAuB,OAAmBD,GAAeE,QAASH,GACtDI,OAAOC,aAAa,OENZC,oNCGbC,YAAc,WAAM,IAAAC,EACaxB,EAAKC,OACpCwB,EAFkBD,EACVC,UADUD,EACAE,mFAIX,IACCA,EAAaf,KAAKV,MAAlByB,SACR,OACElC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBgC,cAAehB,KAAKY,aAAcG,EAASE,cAT9DhB,cCFLiB,oNCGbC,eAAiB,WAAM,IAAAN,EACSxB,EAAKC,OACnC8B,EAFqBP,EACbO,eADaP,EACEQ,6EAKvB,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASwB,QAASR,KAAKmB,wBARpBlB,cCFTqB,qBCKb,SAAAA,EAAYhC,GAAO,IAAAD,EAAA,OAAAkC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAsB,IACjBjC,EAAAkC,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA3B,KAAMV,KAQRsC,eAAiB,SAACb,GAChB1B,EAAKwC,SAAS,CACZC,OAAQf,EAASM,GACjBU,gBAAiBhB,EAASE,SAZX5B,EAgBnB2C,oBAAsB,WAAM,IAAAnB,EACQxB,EAAKC,OACvC2C,EAF0BpB,EAClBoB,aADkBpB,EACLE,SACAM,KAlBJhC,EAqBnBH,eAAiB,SAACC,GAAM,IAAA+C,EACS7C,EAAKC,MAA5ByB,EADcmB,EACdnB,SAAUD,EADIoB,EACJpB,SAElB,GADuB,KACnB3B,EAAEO,QAA4B,CAChCP,EAAEQ,iBACF,IAAMJ,EAAOJ,EAAEK,OAAOC,MAAM0C,OAC5B,GAAa,KAAT5C,EAAa,OAAOuB,EAASC,GAAU,GAC3C,GAAa,KAATxB,GAAe,KAAKK,KAAKL,GAC3BJ,EAAEK,OAAOC,MAAQ,GAEjBqB,EADa,CAAEO,GAAIN,EAASM,GAAIJ,MAAO1B,EAAM6C,UAAWrB,EAASqB,YAEjE/C,EAAKwC,SAAS,CACZC,OAAQ,MAjCGzC,EAuCnBgD,gBAAkB,SAAClD,GAAM,IAAAmD,EACQjD,EAAKC,MAA5ByB,EADeuB,EACfvB,SAAUD,EADKwB,EACLxB,SACZvB,EAAOJ,EAAEK,OAAOC,MAAM0C,OAC5B,GAAa,KAAT5C,EAAa,OAAOuB,EAASC,GAAU,GAC3C5B,EAAEK,OAAOC,MAAQ,GAEjBqB,EADa,CAAEO,GAAIN,EAASM,GAAIJ,MAAO1B,EAAM6C,UAAWrB,EAASqB,YAEjE/C,EAAKwC,SAAS,CACZC,OAAQ,KA/COzC,EAmDnBkD,kBAAoB,SAACpD,GACnBE,EAAKwC,SAAS,CAAEE,gBAAiB5C,EAAEK,OAAOC,SAjD1CJ,EAAKmD,MAAQ,CACXV,OAAQ,EACRC,gBAAiB,IALF1C,wEAuDV,IAAAoD,EAC6BzC,KAAKwC,MAAjCV,EADDW,EACCX,OAAQC,EADTU,EACSV,gBADTW,EAE0B1C,KAAKV,MAA9ByB,EAFD2B,EAEC3B,SAAU4B,EAFXD,EAEWC,WACVP,EAAcrB,EAAdqB,UACFQ,EAAU7B,EAASM,KAAOS,EAEhC,OACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACGD,EACC/D,EAAAC,EAAAC,cAAA,SACE+D,KAAK,OACLC,WAAS,EACT/D,UAAU,eACVS,MAAOsC,EACPiB,SAAUhD,KAAKuC,kBACfxC,UAAWC,KAAKd,eAChB+D,OAAQjD,KAAKqC,kBAGfxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SACE+D,KAAK,WACLzB,GAAIN,EAASM,GACb6B,QAASd,EACTpD,UAAU,gBACVgE,SAAUhD,KAAKgC,sBAEjBnD,EAAAC,EAAAC,cAAA,SAAOoE,QAASpC,EAASM,KACzBxC,EAAAC,EAAAC,cAACqE,EAAD,CAAOrC,SAAUA,EAAUD,SAAUd,KAAK4B,iBAC1C/C,EAAAC,EAAAC,cAACsE,EAAD,CAAWjC,cAAeuB,EAAYtB,GAAIN,EAASM,cArFpCpB,cCJZqD,oNCGbd,MAAQ,CACNe,IAAK,SAGPC,eAAiB,SAACrE,GAAM,IACdsE,EAAWpE,EAAKC,MAAhBmE,OACFF,EAAMpE,EAAEK,OAAOkE,UACrBD,EAAOF,GACPlE,EAAKwC,SAAS,CACZ0B,iFAIK,IACCA,EAAQvD,KAAKwC,MAAbe,IADD1C,EAE0Db,KAAKV,MAA9DqE,EAFD9C,EAEC8C,mBAAoBC,EAFrB/C,EAEqB+C,gBAAiBC,EAFtChD,EAEsCgD,gBACvCC,EAAqB,QAARP,EAAiB,aAAe,GAC7CQ,EAAwB,WAARR,EAAoB,aAAe,GACnDS,EAA2B,cAART,EAAuB,aAAe,GAC/D,OACE1E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAuC,GAAAuB,OAA2BqD,EAAP,IAApBA,EAAA,6BACvD/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,yBAAAuB,OAA2BuD,GAAatD,QAASR,KAAKwD,gBAArE,OACA3E,EAAAC,EAAAC,cAAA,QAAMC,UAAS,yBAAAuB,OAA2BwD,GAAgBvD,QAASR,KAAKwD,gBAAxE,UACA3E,EAAAC,EAAAC,cAAA,QAAMC,UAAS,yBAAAuB,OAA2ByD,GAAmBxD,QAASR,KAAKwD,gBAA3E,cAEDK,GAAmBhF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+BwB,QAASmD,GAAxD,2BA5BH1D,cCFVgE,oNCKbzB,MAAQ,CACNe,IAAK,SAGPW,kBAAoB,SAACX,GACnBlE,EAAKwC,SAAS,CACZ0B,iFAIK,IACCA,EAAQvD,KAAKwC,MAAbe,IADD1C,EAUHb,KAAKV,MAPP6E,EAHKtD,EAGLsD,SACAxB,EAJK9B,EAIL8B,WACAV,EALKpB,EAKLoB,YACAnB,EANKD,EAMLC,SACA+C,EAPKhD,EAOLgD,gBACAD,EARK/C,EAQL+C,gBACAD,EATK9C,EASL8C,mBAGF3D,KAAKoE,YAAc,WACjB,OAAQb,GACN,IAAK,MACH,OAAOY,EACT,IAAK,SACH,OAAOA,EAASE,OAAO,SAAAC,GAAQ,OAAKA,EAASlC,YAC/C,IAAK,YACH,OAAO+B,EAASE,OAAO,SAAAC,GAAQ,OAAIA,EAASlC,cAMlD,IACMmC,EADcvE,KAAKoE,cACII,IAAI,SAAAC,GAAI,OACnC5F,EAAAC,EAAAC,cAAA,MAAI2F,IAAKD,EAAKpD,GAAIrC,UAAU,aAC1BH,EAAAC,EAAAC,cAAC4F,EAAD,CACE5D,SAAU0D,EACV9B,WAAYA,EACZV,YAAaA,EACbnB,SAAUA,OAKhB,OACEjC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACXuF,EACD1F,EAAAC,EAAAC,cAAC6F,EAAD,CACEf,gBAAiBA,EACjBD,gBAAiBA,EACjBD,mBAAoBA,EACpBF,OAAQzD,KAAKkE,4BAvDAjE,cCJR4E,qBCKb,SAAAA,EAAYvF,GAAO,IAAAD,EAAA,OAAAkC,OAAAC,EAAA,EAAAD,CAAAvB,KAAA6E,IACjBxF,EAAAkC,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAA3B,KAAMV,KASRwF,oBAAsB,SAACvF,GAAS,IAAAkD,EACIpD,EAAKmD,MAA/B2B,EADsB1B,EACtB0B,SAAUY,EADYtC,EACZsC,YACZC,EAAO,CAAE3D,GAAI0D,EAAc,EAAG9D,MAAO1B,EAAM6C,WAAW,GACtDrB,EAAWoD,EAAS5D,OAAOyE,GACjC3F,EAAKwC,SAAS,CACZkD,YAAaA,EAAc,EAC3BZ,SAAUpD,EACVkE,QAAQ,IAEV5F,EAAK6F,cAAcnE,IAnBF1B,EAsBnB6F,cAAgB,SAACnE,GACfoE,aAAaC,QAAQ,UAAWC,KAAKC,UAAUvE,IACvB,IAApBA,EAASwE,QACXJ,aAAaK,WAAW,YAzBTnG,EA6BnBoG,iBAAmB,SAACC,GAElB,IAF6B,IAAAC,EACAtG,EAAKmD,MAA1B2B,EADqBwB,EACrBxB,SAAUc,EADWU,EACXV,OACTW,EAAI,EAAGA,EAAIzB,EAASoB,OAAQK,GAAK,EACpCzB,EAASyB,GAAGvE,KAAOqE,GACrBvB,EAAS0B,OAAOD,EAAG,GAGvB,IAAME,EAAY3B,EAAS,GAAKc,GAAUA,EAC1C5F,EAAKwC,SAAS,CACZsC,WACAc,OAAQa,IAEVzG,EAAK6F,cAAcf,IAzCF9E,EA4CnB0G,sBAAwB,WAAM,IAAAC,EACC3G,EAAKmD,MAA1B2B,EADoB6B,EACpB7B,SAAUc,EADUe,EACVf,OACZlE,EAAWoD,EAASE,OAAO,SAAAC,GAAQ,OAAKA,EAASlC,YACjD0D,EAAY/E,EAAS,GAAKkE,GAAUA,EAC1C5F,EAAKwC,SAAS,CACZsC,SAAUpD,EACVkE,OAAQa,IAEVzG,EAAK6F,cAAcnE,IApDF1B,EAuDnB4G,kBAAoB,SAACP,GAGnB,IAH8B,IACtBvB,EAAa9E,EAAKmD,MAAlB2B,SAECyB,EAAI,EAAGA,EAAIzB,EAASoB,OAAQK,GAAK,EACpCzB,EAASyB,GAAGvE,KAAOqE,IACrBvB,EAASyB,GAAGxD,WAAa+B,EAASyB,GAAGxD,WAIzC/C,EAAKwC,SAAS,CACZsC,aAGF9E,EAAK6F,cAAcf,IApEF9E,EAuEnB6G,mBAAqB,WAInB,IAJyB,IACjB/B,EAAa9E,EAAKmD,MAAlB2B,SACJ/D,GAAe,EAEVwF,EAAI,EAAGA,EAAIzB,EAASoB,OAAQK,GAAK,EACnCzB,EAASyB,GAAGxD,YACf+B,EAASyB,GAAGxD,WAAY,EACxBhC,GAAe,GAInB,GAAIA,EAAc,CAChB,IAAK,IAAIwF,EAAI,EAAGA,EAAIzB,EAASoB,OAAQK,GAAK,EACxCzB,EAASyB,GAAGxD,WAAY,EAE1BhC,GAAe,EAGjBf,EAAKwC,SAAS,CACZsC,aAGF9E,EAAK6F,cAAcf,IA7FF9E,EAgGnBuC,eAAiB,SAACuE,EAAcC,GAAY,IAClCjC,EAAa9E,EAAKmD,MAAlB2B,SACR,GAAIiC,EAAS,OAAO/G,EAAKoG,iBAAiBU,EAAa9E,IACvD,IAAK,IAAIuE,EAAI,EAAGA,EAAIzB,EAASoB,OAAQK,GAAK,EACpCzB,EAASyB,GAAGvE,KAAO8E,EAAa9E,KAClC8C,EAASyB,GAAG3E,MAAQkF,EAAalF,OAGrC5B,EAAKwC,SAAS,CACZsC,aAEF9E,EAAK6F,cAAcf,IAxGnB9E,EAAKmD,MAAQ,CACXyC,OAA6C,OAApCE,aAAakB,QAAQ,aAAwB,EACtDlC,SAAUkB,KAAKiB,MAAMnB,aAAakB,QAAQ,aAAe,GACzDtB,YAAkD,OAApCI,aAAakB,QAAQ,WAAuBhB,KAAKiB,MAAMnB,aAAakB,QAAQ,YAAYhB,KAAKiB,MAAMnB,aAAakB,QAAQ,YAAYd,OAAS,GAAGlE,GAAK,GANpJhC,wEA8GV,IAAAkH,EACsBvG,KAAKwC,MAA1B2B,EADDoC,EACCpC,SAAUc,EADXsB,EACWtB,OACZrB,EAAkBO,EAASE,OAAO,SAAAC,GAAQ,OAAKA,EAASlC,YAAWmD,OACnEiB,EAAsBrC,EAASE,OAAO,SAAAC,GAAQ,OAAIA,EAASlC,YAC9DmD,OACGkB,EAAQxB,GACZpG,EAAAC,EAAAC,cAAC2H,EAAD,CACEvC,SAAUA,EACVP,gBAAiBA,EACjBC,gBAAyC,IAAxB2C,EACjB7D,WAAY3C,KAAKyF,iBACjBxD,YAAajC,KAAKiG,kBAClBtC,mBAAoB3D,KAAK+F,sBACzBjF,SAAUd,KAAK4B,iBAInB,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZiG,GACCpG,EAAAC,EAAAC,cAAC4H,EAAD,CACEtG,aAAcL,KAAKkG,mBACnB9F,aAAkC,IAApBwD,IAGlB/E,EAAAC,EAAAC,cAAC6H,EAAD,CAAUxH,QAASY,KAAK8E,uBAEzB2B,UA3IUxG,oBCQJ4G,ICZAA,EDGf,WACE,OACEhI,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAC+H,EAAD,MACAjI,EAAAC,EAAAC,cAACgI,EAAD,cEJNC,IAASC,OAAOpI,EAAAC,EAAAC,cAACmI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f8b603f7.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Header() {\n  return (\n    <h1 className=\"headline\">todos</h1>\n  );\n}\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import Textarea from './Textarea';\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass Textarea extends Component {\n  handleKeyPress = (e) => {\n    const { getText } = this.props;\n    const ENTER_KEY_CODE = 13;\n    const text = e.target.value;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        getText(text);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <textarea\n        wrap=\"off\"\n        className=\"main__input-area\"\n        placeholder=\"What needs to be done?\"\n        onKeyDown={this.handleKeyPress}\n      />\n    );\n  }\n}\n\nTextarea.propTypes = {\n  getText: PropTypes.func.isRequired,\n};\n\nexport default Textarea;\n","import React from 'react';\nimport './style.css';\n\nfunction BtnSelectAll(data) {\n  const { isAllChecked, selectedItem } = data;\n  const classActive = isAllChecked ? 'active' : '';\n  return (\n    <div className={`checked-items ${classActive}`} onClick={selectedItem}>\n      {String.fromCharCode(709)}\n    </div>\n  );\n}\n\nexport default BtnSelectAll;\n","import BtnSelectAll from './BtnSelectAll';\n\nexport default BtnSelectAll;\n","import Title from './Title';\n\nexport default Title;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass Title extends Component {\n  handleClick = () => {\n    const { editItem, todolist } = this.props;\n    editItem(todolist);\n  }\n\n  render() {\n    const { todolist } = this.props;\n    return (\n      <span className=\"task-list_text\" onDoubleClick={this.handleClick}>{todolist.title}</span>\n    );\n  }\n}\n\nTitle.propTypes = {\n  todolist: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  editItem: PropTypes.func.isRequired,\n};\n\nexport default Title;\n","import BtnDelete from './BtnDelete';\n\nexport default BtnDelete;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass BtnDelete extends Component {\n  handleClickBtn = () => {\n    const { onClickDelete, id } = this.props;\n    onClickDelete(id);\n  }\n\n  render() {\n    return (\n      <div className=\"btnDel\" onClick={this.handleClickBtn}/>\n    );\n  }\n}\n\nBtnDelete.propTypes = {\n  id: PropTypes.number.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default BtnDelete;\n","import ItemTaskList from './ItemTaskList';\n\nexport default ItemTaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Title from '../Title';\nimport BtnDelete from '../BtnDelete';\nimport './style.css';\n\nclass ItemTaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      idEdit: 0,\n      valueBeforeEdit: '',\n    };\n  }\n\n  handleEditItem = (todolist) => {\n    this.setState({\n      idEdit: todolist.id,\n      valueBeforeEdit: todolist.title,\n    });\n  }\n\n  handleClickCheckbox = () => {\n    const { checkedItem, todolist } = this.props;\n    checkedItem(todolist.id);\n  }\n\n  handleKeyPress = (e) => {\n    const { todolist, editItem } = this.props;\n    const ENTER_KEY_CODE = 13;\n    if (e.keyCode === ENTER_KEY_CODE) {\n      e.preventDefault();\n      const text = e.target.value.trim();\n      if (text === '') return editItem(todolist, true);\n      if (text !== '' && /\\S/.test(text)) {\n        e.target.value = '';\n        const task = { id: todolist.id, title: text, completed: todolist.completed };\n        editItem(task);\n        this.setState({\n          idEdit: 0,\n        });\n      }\n    }\n  }\n\n  handleInputBlur = (e) => {\n    const { todolist, editItem } = this.props;\n    const text = e.target.value.trim();\n    if (text === '') return editItem(todolist, true);\n    e.target.value = '';\n    const task = { id: todolist.id, title: text, completed: todolist.completed };\n    editItem(task);\n    this.setState({\n      idEdit: 0,\n    });\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ valueBeforeEdit: e.target.value });\n  }\n\n  render() {\n    const { idEdit, valueBeforeEdit } = this.state;\n    const { todolist, deleteItem } = this.props;\n    const { completed } = todolist;\n    const isEdit = (todolist.id === idEdit);\n\n    return (\n      <React.Fragment>\n        {isEdit ? (\n          <input\n            type=\"text\"\n            autoFocus\n            className=\"text-editing\"\n            value={valueBeforeEdit}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyPress}\n            onBlur={this.handleInputBlur}\n          />\n        ) : (\n          <div className=\"listItemWrapper\">\n            <input\n              type=\"checkbox\"\n              id={todolist.id}\n              checked={completed}\n              className=\"list-checkbox\"\n              onChange={this.handleClickCheckbox}\n            />\n            <label htmlFor={todolist.id}/>\n            <Title todolist={todolist} editItem={this.handleEditItem} />\n            <BtnDelete onClickDelete={deleteItem} id={todolist.id} />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nItemTaskList.propTypes = {\n  todolist: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  editItem: PropTypes.func.isRequired,\n  checkedItem: PropTypes.func.isRequired,\n};\n\nexport default ItemTaskList;\n","import ListFooter from './ListFooter';\n\nexport default ListFooter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nclass ListFooter extends Component {\n  state = {\n    tab: 'All',\n  }\n\n  handleClickTab = (e) => {\n    const { getTab } = this.props;\n    const tab = e.target.innerHTML;\n    getTab(tab);\n    this.setState({\n      tab,\n    });\n  }\n\n  render() {\n    const { tab } = this.state;\n    const { deleteCompletedAll, countActiveItem, isCheckedExists } = this.props;\n    const borderAll = (tab === 'All') ? 'activeBord' : '';\n    const borderActive = (tab === 'Active') ? 'activeBord' : '';\n    const borderCompleted = (tab === 'Completed') ? 'activeBord' : '';\n    return (\n      <li className=\"list-footer js-list-footer\">\n        <span className=\"footer-item item-select active-task\">{countActiveItem === 1 ? `${countActiveItem} item left` : `${countActiveItem} items left`}</span>\n        <div className=\"bookmarks-wrapper\">\n          <span className={`footer-item bookmarks ${borderAll}`} onClick={this.handleClickTab}>All</span>\n          <span className={`footer-item bookmarks ${borderActive}`} onClick={this.handleClickTab}>Active</span>\n          <span className={`footer-item bookmarks ${borderCompleted}`} onClick={this.handleClickTab}>Completed</span>\n        </div>\n        {isCheckedExists && <span className=\"footer-item delete-completed\" onClick={deleteCompletedAll}>Clear completed</span>}\n      </li>\n    );\n  }\n}\n\nListFooter.propTypes = {\n  deleteCompletedAll: PropTypes.func.isRequired,\n  countActiveItem: PropTypes.number.isRequired,\n  isCheckedExists: PropTypes.bool.isRequired,\n  getTab: PropTypes.func.isRequired,\n};\n\nexport default ListFooter;\n","import TaskList from './TaskList';\n\nexport default TaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemTaskList from '../ItemTaskList';\nimport ListFooter from '../ListFooter';\nimport './style.css';\n\nclass TaskList extends Component {\n  state = {\n    tab: 'All',\n  }\n\n  handleGetItemsTab = (tab) => {\n    this.setState({\n      tab,\n    });\n  }\n\n  render() {\n    const { tab } = this.state;\n    const {\n      todoList,\n      deleteItem,\n      checkedItem,\n      editItem,\n      isCheckedExists,\n      countActiveItem,\n      deleteCompletedAll,\n    } = this.props;\n\n    this.getItemsTab = () => {\n      switch (tab) {\n        case 'All':\n          return todoList;\n        case 'Active':\n          return todoList.filter(itemList => !itemList.completed);\n        case 'Completed':\n          return todoList.filter(itemList => itemList.completed);\n        default:\n          break;\n      }\n    };\n\n    const todoListTab = this.getItemsTab();\n    const listItem = todoListTab.map(item => (\n      <li key={item.id} className=\"list-item\">\n        <ItemTaskList\n          todolist={item}\n          deleteItem={deleteItem}\n          checkedItem={checkedItem}\n          editItem={editItem}\n        />\n      </li>\n    ));\n\n    return (\n      <ul className=\"main__task-list\">\n        {listItem}\n        <ListFooter\n          isCheckedExists={isCheckedExists}\n          countActiveItem={countActiveItem}\n          deleteCompletedAll={deleteCompletedAll}\n          getTab={this.handleGetItemsTab}\n        />\n      </ul>\n    );\n  }\n}\n\nTaskList.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  isCheckedExists: PropTypes.bool.isRequired,\n  countActiveItem: PropTypes.number.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  checkedItem: PropTypes.func.isRequired,\n  editItem: PropTypes.func.isRequired,\n  deleteCompletedAll: PropTypes.func.isRequired,\n};\n\nexport default TaskList;\n","import Main from './Main';\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Textarea from '../Textarea';\nimport BtnSelectAll from '../BtnSelectAll';\nimport TaskList from '../TaskList';\nimport './style.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: (localStorage.getItem('todoApp') !== null) || false,\n      todoList: JSON.parse(localStorage.getItem('todoApp')) || [],\n      counterTask: (localStorage.getItem('todoApp') !== null) ? JSON.parse(localStorage.getItem('todoApp'))[JSON.parse(localStorage.getItem('todoApp')).length - 1].id : 0,\n    };\n  }\n\n  getTextFromTextarea = (text) => {\n    const { todoList, counterTask } = this.state;\n    const task = { id: counterTask + 1, title: text, completed: false };\n    const todolist = todoList.concat(task);\n    this.setState({\n      counterTask: counterTask + 1,\n      todoList: todolist,\n      isOpen: true,\n    });\n    this.saveToStorage(todolist);\n  }\n\n  saveToStorage = (todolist) => {\n    localStorage.setItem('todoApp', JSON.stringify(todolist));\n    if (todolist.length === 0) {\n      localStorage.removeItem('todoApp');\n    }\n  }\n\n  handleItemDelete = (ItemID) => {\n    const { todoList, isOpen } = this.state;\n    for (let i = 0; i < todoList.length; i += 1) {\n      if (todoList[i].id === ItemID) {\n        todoList.splice(i, 1);\n      }\n    }\n    const newIsOpen = todoList[0] ? isOpen : !isOpen;\n    this.setState({\n      todoList,\n      isOpen: newIsOpen,\n    });\n    this.saveToStorage(todoList);\n  }\n\n  handleDeleteCompleted = () => {\n    const { todoList, isOpen } = this.state;\n    const todolist = todoList.filter(itemList => !itemList.completed);\n    const newIsOpen = todolist[0] ? isOpen : !isOpen;\n    this.setState({\n      todoList: todolist,\n      isOpen: newIsOpen,\n    });\n    this.saveToStorage(todolist);\n  }\n\n  handleCheckedItem = (ItemID) => {\n    const { todoList } = this.state;\n\n    for (let i = 0; i < todoList.length; i += 1) {\n      if (todoList[i].id === ItemID) {\n        todoList[i].completed = !todoList[i].completed;\n      }\n    }\n\n    this.setState({\n      todoList,\n    });\n\n    this.saveToStorage(todoList);\n  }\n\n  handleSelectedItem = () => {\n    const { todoList } = this.state;\n    let isAllChecked = true;\n\n    for (let i = 0; i < todoList.length; i += 1) {\n      if (!todoList[i].completed) {\n        todoList[i].completed = true;\n        isAllChecked = false;\n      }\n    }\n\n    if (isAllChecked) {\n      for (let i = 0; i < todoList.length; i += 1) {\n        todoList[i].completed = false;\n      }\n      isAllChecked = false;\n    }\n\n    this.setState({\n      todoList,\n    });\n\n    this.saveToStorage(todoList);\n  }\n\n  handleEditItem = (todolistEdit, isEmpty) => {\n    const { todoList } = this.state;\n    if (isEmpty) return this.handleItemDelete(todolistEdit.id);\n    for (let i = 0; i < todoList.length; i += 1) {\n      if (todoList[i].id === todolistEdit.id) {\n        todoList[i].title = todolistEdit.title;\n      }\n    }\n    this.setState({\n      todoList,\n    });\n    this.saveToStorage(todoList);\n  }\n\n  render() {\n    const { todoList, isOpen } = this.state;\n    const countActiveItem = todoList.filter(itemList => !itemList.completed).length;\n    const countCompletedItems = todoList.filter(itemList => itemList.completed)\n      .length;\n    const Tasks = isOpen && (\n      <TaskList\n        todoList={todoList}\n        countActiveItem={countActiveItem}\n        isCheckedExists={countCompletedItems !== 0}\n        deleteItem={this.handleItemDelete}\n        checkedItem={this.handleCheckedItem}\n        deleteCompletedAll={this.handleDeleteCompleted}\n        editItem={this.handleEditItem}\n      />\n    );\n\n    return (\n      <div className=\"main\">\n        <div className=\"main__header\">\n          {isOpen && (\n            <BtnSelectAll\n              selectedItem={this.handleSelectedItem}\n              isAllChecked={countActiveItem === 0}\n            />\n          )}\n          <Textarea getText={this.getTextFromTextarea} />\n        </div>\n        {Tasks}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Header from '../Header';\nimport Main from '../Main';\nimport './style.css';\n\nfunction App() {\n  return (\n    <section className=\"todo-Page\">\n      <Header />\n      <Main />\n    </section>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}