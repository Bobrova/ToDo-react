{"version":3,"sources":["components/Header/index.js","components/Textarea/index.js","components/BtnSelectAll/index.js","components/Title/index.js","components/BtnDelete/index.js","components/ItemTaskList/index.js","components/ListFooter/index.js","components/TaskList/index.js","components/Main/index.js","components/App/index.js","index.js"],"names":["Header","react_default","a","createElement","className","Textarea","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","e","text","target","value","keyCode","preventDefault","test","setState","isOpen","getText","state","bind","assertThisInitialized","wrap","placeholder","onKeyDown","Component","BtnSelectAll","data","SelectedItem","classActive","isAllChecked","concat","onClick","String","fromCharCode","Title","handleClick","EditItem","todolist","onDoubleClick","title","BtnDelete","handleClickBtn","onClickDelete","id","ItemTaskList","handleEditItem","IdEdit","ValueBeforeEdit","handleClickCheckbox","CheckedItem","trim","task","completed","handleInputBlur","handleInputChange","DeleteItem","check","type","checked","onChange","isEdit","htmlFor","components_Title","components_BtnDelete","autoFocus","onBlur","ListFooter","handleClickTab","tab","innerHTML","getItemsTab","DeleteCompletedAll","countActiveItem","BorderAll","BorderActive","BorderCompleted","isCheckedExists","TaskList","handleGetItemsTab","todoList","_this2","filter","itemList","listItem","map","item","key","components_ItemTaskList","components_ListFooter","Main","getTextFromTextarea","counterTask","saveToStorage","localStorage","setItem","JSON","stringify","length","removeItem","handleDeleteItem","ItemID","i","splice","newIsOpen","handleDeleteCompleted","handleCheckedItem","counterChecked","handleSelectedItem","todolistEdit","isEmpty","getItem","parse","Tasks","components_TaskList","components_BtnSelectAll","components_Textarea","App","components_Header","components_Main","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.89bfc74c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css'\r\n\r\nfunction Header() {\r\n  return (\r\n      <h1 className=\"headline\">todos</h1>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport './style.css'\r\n\r\nclass Textarea extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen: false,\r\n    }\r\n\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  }\r\n  \r\n  handleKeyPress = (e) => {\r\n    const ENTER_KEY_CODE = 13;\r\n    const text = e.target.value;\r\n    if (e.keyCode === ENTER_KEY_CODE) {\r\n      e.preventDefault();\r\n      if (text !== '' && /\\S/.test(text)) {\r\n        e.target.value = '';\r\n        this.setState({\r\n      isOpen: true\r\n    })\r\n      this.props.getText(text);\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <textarea \r\n          wrap=\"off\" \r\n          className=\"main__input-area js-input-text\" \r\n          placeholder=\"What needs to be done?\" \r\n          onKeyDown={this.handleKeyPress}>\r\n        </textarea>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Textarea;","import React from 'react';\r\nimport './style.css'\r\n\r\nfunction BtnSelectAll(data) {\r\n  const SelectedItem = data.SelectedItem;\r\n  const isAllChecked = data.isAllChecked;\r\n  const classActive = isAllChecked ? 'active' : '';\r\n  return (\r\n      <div className={`checked-items ${classActive}`} onClick={SelectedItem}>{String.fromCharCode(709)}</div>\r\n  );\r\n}\r\n\r\nexport default BtnSelectAll;\r\n","import React, {Component} from 'react';\r\nimport './style.css'\r\n\r\nclass Title extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.EditItem(this.props.todolist);\r\n  }\r\n\r\n  render() {\r\n    const todolist = this.props.todolist;\r\n    return (\r\n        <span className=\"task-list_text\" onDoubleClick={this.handleClick}>{todolist.title}</span>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Title","import React, {Component} from 'react';\r\nimport './style.css'\r\n\r\nclass BtnDelete extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleClickBtn = this.handleClickBtn.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"btnDel\" onClick={this.handleClickBtn}></div>\r\n    )\r\n  }\r\n  \r\n  handleClickBtn = () => {\r\n      this.props.onClickDelete(this.props.id);\r\n    }\r\n}\r\n\r\nexport default BtnDelete","import React, {Component} from 'react';\r\nimport Title from '../Title'\r\nimport BtnDelete from '../BtnDelete'\r\nimport './style.css'\r\n\r\nclass ItemTaskList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      IdEdit: 0,\r\n      ValueBeforeEdit: ''\r\n    }\r\n\r\n    this.handleClickCheckbox = this.handleClickCheckbox.bind(this)\r\n    this.handleEditItem = this.handleEditItem.bind(this)\r\n    this.handleKeyPress = this.handleKeyPress.bind(this)\r\n  }\r\n\r\n  handleEditItem = (todolist) => {\r\n    this.setState({\r\n      IdEdit: todolist.id,\r\n      ValueBeforeEdit: todolist.title\r\n    })\r\n  }\r\n\r\nhandleClickCheckbox = () => {\r\n  this.props.CheckedItem(this.props.todolist.id)\r\n}\r\n\r\nhandleKeyPress = (e) => {\r\n    const ENTER_KEY_CODE = 13;\r\n    if (e.keyCode === ENTER_KEY_CODE) {\r\n      e.preventDefault();\r\n      const text = e.target.value.trim();\r\n      if (text ==='') return this.props.EditItem(this.props.todolist, true);\r\n      if (text !== '' && /\\S/.test(text)) {\r\n        e.target.value = '';\r\n        const task = {id: this.props.todolist.id, title: text, completed: this.props.todolist.completed};\r\n        this.props.EditItem(task);\r\n        this.setState({\r\n          IdEdit: 0,\r\n        })\r\n      } \r\n    }\r\n  }\r\n\r\nhandleInputBlur = (e) => {\r\n    const text = e.target.value.trim();\r\n    if (text ==='') return this.props.EditItem(this.props.todolist, true);\r\n      e.target.value = '';\r\n      const task = {id: this.props.todolist.id, title: text, completed: this.props.todolist.completed};\r\n      this.props.EditItem(task);\r\n      this.setState({\r\n        IdEdit: 0,\r\n      })\r\n    }\r\n\r\nhandleInputChange = (e) => {\r\n   this.setState({ValueBeforeEdit: e.target.value});\r\n}\r\n\r\nrender() {\r\n  const {todolist} = this.props\r\n  const {DeleteItem} = this.props\r\n  const completed = todolist.completed;\r\n  const check = <input type=\"checkbox\" id={todolist.id} checked={completed} className=\"list-checkbox\" onChange={this.handleClickCheckbox}/>\r\n  const isEdit = (todolist.id === this.state.IdEdit);\r\n\r\n      return (\r\n        <div className=\"listItemWrapper\">\r\n          {!isEdit && check}\r\n          {!isEdit && <label htmlFor={todolist.id}></label>}\r\n          {!isEdit && <Title todolist={todolist} EditItem={this.handleEditItem}/>}\r\n          {!isEdit && <BtnDelete onClickDelete={DeleteItem} id={todolist.id}/>}\r\n          {isEdit && <input type=\"text\" autoFocus className=\"text-editing\" value={this.state.ValueBeforeEdit} onChange={this.handleInputChange} onKeyDown={this.handleKeyPress} onBlur={this.handleInputBlur}/>}\r\n        </div>   \r\n      )\r\n  }\r\n}\r\n\r\nexport default ItemTaskList;","import React, {Component} from 'react';\r\nimport './style.css'\r\n\r\nclass ListFooter extends Component{\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tab: 'All'\r\n    }\r\n\r\n    this.handleClickTab = this.handleClickTab.bind(this);\r\n  }\r\n\r\n  handleClickTab = (e) => {\r\n    const tab = e.target.innerHTML;\r\n    this.props.getItemsTab(tab);\r\n    this.setState({\r\n      tab: tab\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const DeleteCompletedAll = this.props.DeleteCompletedAll\r\n    const countActiveItem = this.props.countActiveItem\r\n    const BorderAll = (this.state.tab === 'All') ? 'activeBord' : ''\r\n    const BorderActive = (this.state.tab === 'Active') ? 'activeBord' : ''\r\n    const BorderCompleted = (this.state.tab === 'Completed') ? 'activeBord' : ''\r\n    return (\r\n          <li className=\"list-footer js-list-footer\">\r\n            <span className=\"footer-item item-select active-task\">{countActiveItem === 1 ? `${countActiveItem} item left` : `${countActiveItem} items left`}</span>\r\n            <div className=\"bookmarks-wrapper\">\r\n              <span className={`footer-item bookmarks js-bookmarks ${BorderAll}`} onClick={this.handleClickTab}>All</span>\r\n              <span className={`footer-item bookmarks js-bookmarks ${BorderActive}`} onClick={this.handleClickTab}>Active</span>\r\n              <span className={`footer-item bookmarks js-bookmarks ${BorderCompleted}`} onClick={this.handleClickTab}>Completed</span>\r\n            </div>\r\n            {this.props.isCheckedExists && <span className=\"footer-item delete-completed\" onClick={DeleteCompletedAll}>Clear completed</span>}\r\n        </li>\r\n      )\r\n  }\r\n  \r\n}\r\n\r\nexport default ListFooter;","import React, {Component} from 'react';\r\nimport ItemTaskList from '../ItemTaskList'\r\nimport ListFooter from '../ListFooter'\r\nimport './style.css'\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      todoList: this.props.todoList,\r\n      tab: 'All'\r\n    }\r\n  }\r\n\r\n  handleGetItemsTab = (tab) => {\r\n    this.setState({\r\n          tab: tab\r\n        });\r\n  }\r\n\r\n  render() {\r\n\r\n    this.getItemsTab = () => {\r\n    switch (this.state.tab) {\r\n      case 'All':  \r\n        return this.props.todoList\r\n      case 'Active':  \r\n        return this.props.todoList.filter(itemList => !itemList.completed)\r\n      case 'Completed':  \r\n        return this.props.todoList.filter(itemList => itemList.completed)\r\n      default: \r\n        break\r\n    }\r\n  }\r\n\r\n    const todoList = this.getItemsTab()\r\n    const listItem = todoList.map(item => \r\n      <li key={item.id} className=\"list-item\">\r\n        <ItemTaskList \r\n          todolist={item}\r\n          DeleteItem={this.props.DeleteItem}\r\n          CheckedItem={this.props.CheckedItem}\r\n          EditItem={this.props.EditItem}\r\n          IdEdit={this.props.IdEdit}\r\n        />\r\n      </li>\r\n      )\r\n      \r\n\r\n      return (\r\n        <ul className=\"main__task-list\">\r\n          {listItem}\r\n          <ListFooter \r\n            DeleteCompletedAll={this.props.DeleteCompletedAll}\r\n            countActiveItem={this.props.countActiveItem}\r\n            getItemsTab={this.handleGetItemsTab}\r\n            isCheckedExists={this.props.isCheckedExists}\r\n          />\r\n        </ul>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default TaskList;","import React, {Component} from 'react';\r\nimport Textarea from '../Textarea';\r\nimport BtnSelectAll from '../BtnSelectAll';\r\nimport TaskList from '../TaskList'\r\nimport './style.css'\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isOpen: (localStorage.getItem('todoApp') !== null) || false,\r\n      todoList: JSON.parse(localStorage.getItem('todoApp')) || [],\r\n      counterTask: (localStorage.getItem('todoApp') !== null) ? JSON.parse(localStorage.getItem('todoApp'))[JSON.parse(localStorage.getItem('todoApp')).length - 1].id : 0,\r\n    }\r\n\r\n    this.getTextFromTextarea = this.getTextFromTextarea.bind(this);\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.handleDeleteCompleted = this.handleDeleteCompleted.bind(this);\r\n    this.handleCheckedItem = this.handleCheckedItem.bind(this);\r\n    this.handleSelectedItem = this.handleSelectedItem.bind(this);\r\n  }\r\n\r\n    getTextFromTextarea = (text) => {\r\n    const task = {id: this.state.counterTask + 1, title: text, completed: false};\r\n    const todolist = this.state.todoList.concat(task);\r\n    this.setState({\r\n      counterTask: this.state.counterTask + 1,\r\n      todoList: todolist,\r\n      isOpen: true\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  saveToStorage = (todolist) => {\r\n    localStorage.setItem('todoApp', JSON.stringify(todolist));\r\n    if (todolist.length === 0) {\r\n      localStorage.removeItem(\"todoApp\");\r\n    }\r\n  }\r\n\r\n  handleDeleteItem = (ItemID) => {\r\n    const todolist = this.state.todoList;\r\n    for (let i = 0; i < todolist.length; i++) {\r\n      if (todolist[i].id === ItemID) {\r\n        todolist.splice(i, 1);\r\n      }\r\n    }\r\n    const newIsOpen = todolist[0] ? this.state.isOpen : !this.state.isOpen;\r\n    this.setState({\r\n      todoList: todolist,\r\n      isOpen: newIsOpen,\r\n      isAllChecked: (todolist.length === 0) ? false : this.state.isAllChecked\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  handleDeleteCompleted = () => {\r\n    const todolist = this.state.todoList.filter(itemList => !itemList.completed);\r\n    const newIsOpen = todolist[0] ? this.state.isOpen : !this.state.isOpen;\r\n    this.setState({\r\n      todoList: todolist,\r\n      isOpen: newIsOpen,\r\n      isAllChecked: false,\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  handleCheckedItem = (ItemID) => {\r\n    const todolist = this.state.todoList;\r\n    let counterChecked = 0;\r\n    for (let i = 0; i < todolist.length; i++) {\r\n      if (todolist[i].id === ItemID) {\r\n        todolist[i].completed = !todolist[i].completed;\r\n      }\r\n      if (todolist[i].completed) counterChecked += 1;\r\n    }\r\n    const isAllChecked = counterChecked === todolist.length;\r\n    const isCheckedExists = counterChecked !== 0\r\n    this.setState({\r\n      todoList: todolist,\r\n      isAllChecked: isAllChecked,\r\n      isCheckedExists: isCheckedExists\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  handleSelectedItem = () => {\r\n    const todolist = this.state.todoList;\r\n    let isAllChecked = true;\r\n\r\n    for (let i = 0; i < todolist.length; i++) {\r\n      if (!todolist[i].completed) {\r\n        todolist[i].completed = true;\r\n        isAllChecked = false;\r\n      }\r\n    }\r\n\r\n    if (isAllChecked) {\r\n      for (let i = 0; i < todolist.length; i++) {\r\n        todolist[i].completed = false;\r\n      }\r\n      isAllChecked = false;\r\n    }\r\n    else {\r\n      isAllChecked = true;\r\n    }\r\n\r\n    this.setState({\r\n      todoList: todolist,\r\n      isAllChecked: isAllChecked,\r\n      isCheckedExists: isAllChecked\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  handleEditItem = (todolistEdit, isEmpty) => {\r\n    if (isEmpty) return this.handleDeleteItem(todolistEdit.id)\r\n    const todolist = this.state.todoList;\r\n    for (let i = 0; i < todolist.length; i++) {\r\n      if (todolist[i].id === todolistEdit.id) {\r\n        todolist[i].title = todolistEdit.title;\r\n      }\r\n    }\r\n    this.setState({\r\n      todoList: todolist,\r\n    })\r\n    this.saveToStorage(todolist);\r\n  }\r\n\r\n  render () {\r\n    const countActiveItem = (this.state.todoList.filter(itemList => !itemList.completed)).length;\r\n    const Tasks = this.state.isOpen && <TaskList \r\n        todoList={this.state.todoList}\r\n        DeleteItem={this.handleDeleteItem}\r\n        CheckedItem={this.handleCheckedItem}\r\n        DeleteCompletedAll={this.handleDeleteCompleted}\r\n        countActiveItem={countActiveItem}\r\n        EditItem={this.handleEditItem}\r\n        isCheckedExists={this.state.isCheckedExists || countActiveItem === 0}\r\n      />\r\n    return (\r\n        <div className=\"main\">\r\n          <div className=\"main__header\">\r\n            {this.state.isOpen && <BtnSelectAll SelectedItem={this.handleSelectedItem} isAllChecked={this.state.isAllChecked || countActiveItem === 0}/>}\r\n            <Textarea \r\n              getText = {this.getTextFromTextarea}\r\n            />\r\n          </div>\r\n          {Tasks}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Header from '../Header'\nimport Main from '../Main'\nimport './style.css'\n\nfunction App() {\n  return (\n    <section className=\"todo-Page\">\n      <Header />\n      <Main />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}